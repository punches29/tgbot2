from telethon import TelegramClient, events
from telethon.tl.functions.messages import SetTypingRequest
from telethon.tl.types import SendMessageTypingAction
import asyncio

api_id = 24523420
api_hash = '67674fbe96c797365264f03d5e67847e'
session_name = 'my_userbot_session'

client = TelegramClient(session_name, api_id, api_hash)

responded_users = set()

first_message = "–ü—Ä–∏–≤–µ—Ç–∏–∫, —è –º–æ–≥—É –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –∑–∞ 350 ‚≠êÔ∏è, –æ—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ 48 —à—Ç—É—á–µ–∫. –ù–æ –µ—Å—Ç—å –∑–∞–¥–∞–Ω–∏–µ"

second_message = (
    '1) –õ–∞–π–∫–Ω–∏ –∏ –Ω–∞–ø–∏—à–∏ "—Å–ø–∞—Å–∏–±–æ" –ø–æ–¥ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —É–∑–Ω–∞–ª–∏ –æ–±–æ –º–Ω–µ!\n\n'
    '2) –ù–∞–ø–∏—à–∏ –ø–æ–¥ 10 –ª—é–±—ã—Ö –≤–∏–¥–µ–æ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç ‚¨áÔ∏è\n\n'
    '<code>–î–∞–≤–∞–π—Ç–µ, –≤—Å–µ–º –ø–æ –∫–æ–ª–µ—á–∫—É –¥–∞—Ä—é @flowy69 üíç</code>\n\n'
    '‚ÄºÔ∏è –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –õ–ê–ô–ö–ê–ô–¢–ï –í–°–ï –°–í–û–ò –ö–û–ú–ú–ï–ù–¢–´‚ÄºÔ∏è\n\n'
    '–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ –Ω–µ –∑–∞–±—É–¥—å —Å–∫–∏–Ω—É—Ç—å —Å–∫—Ä–∏–Ω—ã, –≤—Å–µ –ø—Ä–æ–≤–µ—Ä—é!!!'
)

third_message = "–ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, –≥–¥–µ —è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø—Ä–æ–≤–æ–∂—É –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏ –ø–æ–¥–∞—Ä–∫–æ–≤) @Flowy"

@client.on(events.NewMessage(incoming=True))
async def handler(event):
    if not event.is_private or event.out:
        return

    user_id = event.sender_id

    # –ï—Å–ª–∏ —ç—Ç–æ —Ñ–æ—Ç–æ, –∏ –±–æ—Ç –µ—â—ë –Ω–µ –æ—Ç–≤–µ—á–∞–ª
    if event.photo and user_id in responded_users:
        await client(SetTypingRequest(peer=event.chat_id, action=SendMessageTypingAction()))
        await asyncio.sleep(5)
        await client.send_message(event.chat_id, third_message)
        return

    # –ï—Å–ª–∏ —É–∂–µ –æ—Ç–≤–µ—á–∞–ª–∏ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    if user_id in responded_users:
        return

    responded_users.add(user_id)

    try:
        # –ü–µ—á–∞—Ç–∞–µ—Ç 7 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        await client(SetTypingRequest(peer=event.chat_id, action=SendMessageTypingAction()))
        await asyncio.sleep(7)
        await client.send_message(event.chat_id, first_message)

        # –ü–µ—á–∞—Ç–∞–µ—Ç –µ—â—ë 7 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –≤—Ç–æ—Ä—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        await client(SetTypingRequest(peer=event.chat_id, action=SendMessageTypingAction()))
        await asyncio.sleep(7)
        await client.send_message(event.chat_id, second_message, parse_mode='html')

    except Exception as e:
        print("Handler error:", e)

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
client.start()
client.run_until_disconnected()
